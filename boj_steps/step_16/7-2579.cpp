#include <stdio.h>
#ifndef ONLINE_JUDGE
    #define READIZ_DEBUG
#endif
#ifdef READIZ_DEBUG
    #define printd(...) { printf("[DEBUG] "); printf(__VA_ARGS__); printf("\n"); }
    inline void testInit() { freopen("7-2579_input.txt", "rt", stdin); }
    #define MAIN_START int main(){testInit();while(!feof(stdin)){
    #define MAIN_END } return 0;}
#else
    #define printd(...)
    #define MAIN_START int main(){
    #define MAIN_END return 0;}
#endif

int DP[301] = {0, };
int cost[301] = {0, };
int N;

int MAX(int a, int b) {
    if (a > b) return a;
    return b;
}

MAIN_START
    printd("--------------------------");
    printd("TEST START!!!");
    scanf("%d", &N);
    printd("N: %d", N);
    printd("--------------------------");
    for (int i = 1; i <= N; i++) {
        scanf("%d", &cost[i]);
    }
    // DP[i]: i 번째 지점을 밟았을 때의 점수 최대값!
    // DP의 핵심: 각 배열 간의 관계를 파악하는 것!
    DP[1] = cost[1];
    for (int i = 2; i <= N; i++) {
        // 1. i 번째 지점에서의 최대값은 당연히 cost[i]를 최종적으로 더해서 구하는 것.
        // 2. i 번째에 도착할 수 있는 경우는, 
        //    2 - 1. 두번째 전에서 오거나, 
        //    2 - 2. 세 번째 전에서 한칸 전으로 오고, 한칸 전에서 지금 칸으로 오는 것. (세 칸 연속으로 오는 것 방지)
        DP[i] = MAX(DP[i - 3] + cost[i- 1], DP[i - 2]) + cost[i];
    }
    printf("%d\n", DP[N]);
MAIN_END

/*
[NOTE] 3-1904랑 비교.
3-1904의 경우 현재 자신의 칸으로 왔을 때의 경우가 총 3가지가 있었음. R, G, B. 따라서 이를 위해 공간을 3개로 분리함.
7-2579의 경우 자신의 칸에 온 것의 경우는 단 한가지임. 따라서 공간을 추가로 분리할 필요는 없음.
** MAX를 사용할 때, 그 이전 칸과 현재 계산하는 칸의 관계를 잘 생각할 것!!

계단 오르기 출처분류
시간 제한	메모리 제한	제출	정답	맞은 사람	정답 비율
1 초	128 MB	79265	27188	19868	35.560%
문제
계단 오르기 게임은 계단 아래 시작점부터 계단 꼭대기에 위치한 도착점까지 가는 게임이다. <그림 1>과 같이 각각의 계단에는 일정한 점수가 쓰여 있는데 계단을 밟으면 그 계단에 쓰여 있는 점수를 얻게 된다.



예를 들어 <그림 2>와 같이 시작점에서부터 첫 번째, 두 번째, 네 번째, 여섯 번째 계단을 밟아 도착점에 도달하면 총 점수는 10 + 20 + 25 + 20 = 75점이 된다.



계단 오르는 데는 다음과 같은 규칙이 있다.

계단은 한 번에 한 계단씩 또는 두 계단씩 오를 수 있다. 즉, 한 계단을 밟으면서 이어서 다음 계단이나, 다음 다음 계단으로 오를 수 있다.
연속된 세 개의 계단을 모두 밟아서는 안 된다. 단, 시작점은 계단에 포함되지 않는다.
마지막 도착 계단은 반드시 밟아야 한다.
따라서 첫 번째 계단을 밟고 이어 두 번째 계단이나, 세 번째 계단으로 오를 수 있다. 하지만, 첫 번째 계단을 밟고 이어 네 번째 계단으로 올라가거나, 첫 번째, 두 번째, 세 번째 계단을 연속해서 모두 밟을 수는 없다.

각 계단에 쓰여 있는 점수가 주어질 때 이 게임에서 얻을 수 있는 총 점수의 최댓값을 구하는 프로그램을 작성하시오.

입력
입력의 첫째 줄에 계단의 개수가 주어진다.

둘째 줄부터 한 줄에 하나씩 제일 아래에 놓인 계단부터 순서대로 각 계단에 쓰여 있는 점수가 주어진다. 계단의 개수는 300이하의 자연수이고, 계단에 쓰여 있는 점수는 10,000이하의 자연수이다.

출력
첫째 줄에 계단 오르기 게임에서 얻을 수 있는 총 점수의 최댓값을 출력한다.

예제 입력 1 
6
10
20
15
25
10
20
예제 출력 1 
75
*/
