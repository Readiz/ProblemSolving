#include <stdio.h>
#ifndef ONLINE_JUDGE
    #define READIZ_DEBUG
#endif
#ifdef READIZ_DEBUG
    #define printd(...) { printf("[DEBUG] "); printf(__VA_ARGS__); printf("\n"); }
    inline void testInit() { freopen("B_input.txt", "rt", stdin); }
    #define MAIN_START int main(){testInit();while(!feof(stdin)){
    #define MAIN_END } return 0;}
#else
    #define printd(...)
    #define MAIN_START int main(){
    #define MAIN_END return 0;}
#endif
typedef unsigned long long ull;
typedef long long ll;
int ra[10][10][10];
int rb[10][10][10];
void swap(int &a, int &b) {
    int tmp = a;
    a = b;
    b = tmp;
}
MAIN_START
    ra[1][1][1] = 1;
    rb[1][1][1] = 1;
    ra[1][2][1] = 1;
    rb[1][2][1] = 10;
    ra[1][3][1] = 1;
    rb[1][3][1] = 100;
    ra[1][4][1] = 1;
    rb[1][4][1] = 1000;
    ra[1][5][1] = 1;
    rb[1][5][1] = 10000;
    ra[1][6][1] = 1;
    rb[1][6][1] = 100000;
    ra[1][7][1] = 1;
    rb[1][7][1] = 1000000;
    ra[1][8][1] = 1;
    rb[1][8][1] = 10000000;
    ra[1][9][1] = 1;
    rb[1][9][1] = 100000000;
    ra[2][2][1] = 10;
    rb[2][2][1] = 11;
    ra[2][2][2] = 10;
    rb[2][2][2] = 10;
    ra[2][3][1] = 10;
    rb[2][3][1] = 101;
    ra[2][3][2] = 10;
    rb[2][3][2] = 100;
    ra[2][4][1] = 10;
    rb[2][4][1] = 1001;
    ra[2][4][2] = 10;
    rb[2][4][2] = 1000;
    ra[2][5][1] = 10;
    rb[2][5][1] = 10001;
    ra[2][5][2] = 10;
    rb[2][5][2] = 10000;
    ra[2][6][1] = 10;
    rb[2][6][1] = 100001;
    ra[2][6][2] = 10;
    rb[2][6][2] = 100000;
    ra[2][7][1] = 10;
    rb[2][7][1] = 1000001;
    ra[2][7][2] = 10;
    rb[2][7][2] = 1000000;
    ra[2][8][1] = 10;
    rb[2][8][1] = 10000001;
    ra[2][8][2] = 10;
    rb[2][8][2] = 10000000;
    ra[2][9][1] = 10;
    rb[2][9][1] = 100000001;
    ra[2][9][2] = 10;
    rb[2][9][2] = 100000000;
    ra[3][3][1] = 100;
    rb[3][3][1] = 101;
    ra[3][3][2] = 100;
    rb[3][3][2] = 110;
    ra[3][3][3] = 100;
    rb[3][3][3] = 100;
    ra[3][4][1] = 100;
    rb[3][4][1] = 1001;
    ra[3][4][2] = 100;
    rb[3][4][2] = 1010;
    ra[3][4][3] = 100;
    rb[3][4][3] = 1000;
    ra[3][5][1] = 100;
    rb[3][5][1] = 10001;
    ra[3][5][2] = 100;
    rb[3][5][2] = 10010;
    ra[3][5][3] = 100;
    rb[3][5][3] = 10000;
    ra[3][6][1] = 100;
    rb[3][6][1] = 100001;
    ra[3][6][2] = 100;
    rb[3][6][2] = 100010;
    ra[3][6][3] = 100;
    rb[3][6][3] = 100000;
    ra[3][7][1] = 100;
    rb[3][7][1] = 1000001;
    ra[3][7][2] = 100;
    rb[3][7][2] = 1000010;
    ra[3][7][3] = 100;
    rb[3][7][3] = 1000000;
    ra[3][8][1] = 100;
    rb[3][8][1] = 10000001;
    ra[3][8][2] = 100;
    rb[3][8][2] = 10000010;
    ra[3][8][3] = 100;
    rb[3][8][3] = 10000000;
    ra[3][9][1] = 100;
    rb[3][9][1] = 100000001;
    ra[3][9][2] = 100;
    rb[3][9][2] = 100000010;
    ra[3][9][3] = 100;
    rb[3][9][3] = 100000000;
    ra[4][4][1] = 1000;
    rb[4][4][1] = 1001;
    ra[4][4][2] = 1000;
    rb[4][4][2] = 1010;
    ra[4][4][3] = 1000;
    rb[4][4][3] = 1100;
    ra[4][4][4] = 1000;
    rb[4][4][4] = 1000;
    ra[4][5][1] = 1000;
    rb[4][5][1] = 10001;
    ra[4][5][2] = 1000;
    rb[4][5][2] = 10010;
    ra[4][5][3] = 1000;
    rb[4][5][3] = 10100;
    ra[4][5][4] = 1000;
    rb[4][5][4] = 10000;
    ra[4][6][1] = 1000;
    rb[4][6][1] = 100001;
    ra[4][6][2] = 1000;
    rb[4][6][2] = 100010;
    ra[4][6][3] = 1000;
    rb[4][6][3] = 100100;
    ra[4][6][4] = 1000;
    rb[4][6][4] = 100000;
    ra[4][7][1] = 1000;
    rb[4][7][1] = 1000001;
    ra[4][7][2] = 1000;
    rb[4][7][2] = 1000010;
    ra[4][7][3] = 1000;
    rb[4][7][3] = 1000100;
    ra[4][7][4] = 1000;
    rb[4][7][4] = 1000000;
    ra[4][8][1] = 1000;
    rb[4][8][1] = 10000001;
    ra[4][8][2] = 1000;
    rb[4][8][2] = 10000010;
    ra[4][8][3] = 1000;
    rb[4][8][3] = 10000100;
    ra[4][8][4] = 1000;
    rb[4][8][4] = 10000000;
    ra[4][9][1] = 1000;
    rb[4][9][1] = 100000001;
    ra[4][9][2] = 1000;
    rb[4][9][2] = 100000010;
    ra[4][9][3] = 1000;
    rb[4][9][3] = 100000100;
    ra[4][9][4] = 1000;
    rb[4][9][4] = 100000000;
    ra[5][5][1] = 10000;
    rb[5][5][1] = 10001;
    ra[5][5][2] = 10000;
    rb[5][5][2] = 10010;
    ra[5][5][3] = 10000;
    rb[5][5][3] = 10100;
    ra[5][5][4] = 10000;
    rb[5][5][4] = 11000;
    ra[5][5][5] = 10000;
    rb[5][5][5] = 10000;
    ra[5][6][1] = 10000;
    rb[5][6][1] = 100001;
    ra[5][6][2] = 10000;
    rb[5][6][2] = 100010;
    ra[5][6][3] = 10000;
    rb[5][6][3] = 100100;
    ra[5][6][4] = 10000;
    rb[5][6][4] = 101000;
    ra[5][6][5] = 10000;
    rb[5][6][5] = 100000;
    ra[5][7][1] = 10000;
    rb[5][7][1] = 1000001;
    ra[5][7][2] = 10000;
    rb[5][7][2] = 1000010;
    ra[5][7][3] = 10000;
    rb[5][7][3] = 1000100;
    ra[5][7][4] = 10000;
    rb[5][7][4] = 1001000;
    ra[5][7][5] = 10000;
    rb[5][7][5] = 1000000;
    ra[5][8][1] = 10000;
    rb[5][8][1] = 10000001;
    ra[5][8][2] = 10000;
    rb[5][8][2] = 10000010;
    ra[5][8][3] = 10000;
    rb[5][8][3] = 10000100;
    ra[5][8][4] = 10000;
    rb[5][8][4] = 10001000;
    ra[5][8][5] = 10000;
    rb[5][8][5] = 10000000;
    ra[5][9][1] = 10000;
    rb[5][9][1] = 100000001;
    ra[5][9][2] = 10000;
    rb[5][9][2] = 100000010;
    ra[5][9][3] = 10000;
    rb[5][9][3] = 100000100;
    ra[5][9][4] = 10000;
    rb[5][9][4] = 100001000;
    ra[5][9][5] = 10000;
    rb[5][9][5] = 100000000;
    ra[6][6][1] = 100000;
    rb[6][6][1] = 100001;
    ra[6][6][2] = 100000;
    rb[6][6][2] = 100010;
    ra[6][6][3] = 100000;
    rb[6][6][3] = 100100;
    ra[6][6][4] = 100000;
    rb[6][6][4] = 101000;
    ra[6][6][5] = 100000;
    rb[6][6][5] = 110000;
    ra[6][6][6] = 100000;
    rb[6][6][6] = 100000;
    ra[6][7][1] = 100000;
    rb[6][7][1] = 1000001;
    ra[6][7][2] = 100000;
    rb[6][7][2] = 1000010;
    ra[6][7][3] = 100000;
    rb[6][7][3] = 1000100;
    ra[6][7][4] = 100000;
    rb[6][7][4] = 1001000;
    ra[6][7][5] = 100000;
    rb[6][7][5] = 1010000;
    ra[6][7][6] = 100000;
    rb[6][7][6] = 1000000;
    ra[6][8][1] = 100000;
    rb[6][8][1] = 10000001;
    ra[6][8][2] = 100000;
    rb[6][8][2] = 10000010;
    ra[6][8][3] = 100000;
    rb[6][8][3] = 10000100;
    ra[6][8][4] = 100000;
    rb[6][8][4] = 10001000;
    ra[6][8][5] = 100000;
    rb[6][8][5] = 10010000;
    ra[6][8][6] = 100000;
    rb[6][8][6] = 10000000;
    ra[6][9][1] = 100000;
    rb[6][9][1] = 100000001;
    ra[6][9][2] = 100000;
    rb[6][9][2] = 100000010;
    ra[6][9][3] = 100000;
    rb[6][9][3] = 100000100;
    ra[6][9][4] = 100000;
    rb[6][9][4] = 100001000;
    ra[6][9][5] = 100000;
    rb[6][9][5] = 100010000;
    ra[6][9][6] = 100000;
    rb[6][9][6] = 100000000;
    ra[7][7][1] = 1000000;
    rb[7][7][1] = 1000001;
    ra[7][7][2] = 1000000;
    rb[7][7][2] = 1000010;
    ra[7][7][3] = 1000000;
    rb[7][7][3] = 1000100;
    ra[7][7][4] = 1000000;
    rb[7][7][4] = 1001000;
    ra[7][7][5] = 1000000;
    rb[7][7][5] = 1010000;
    ra[7][7][6] = 1000000;
    rb[7][7][6] = 1100000;
    ra[7][7][7] = 1000000;
    rb[7][7][7] = 1000000;
    ra[7][8][1] = 1000000;
    rb[7][8][1] = 10000001;
    ra[7][8][2] = 1000000;
    rb[7][8][2] = 10000010;
    ra[7][8][3] = 1000000;
    rb[7][8][3] = 10000100;
    ra[7][8][4] = 1000000;
    rb[7][8][4] = 10001000;
    ra[7][8][5] = 1000000;
    rb[7][8][5] = 10010000;
    ra[7][8][6] = 1000000;
    rb[7][8][6] = 10100000;
    ra[7][8][7] = 1000000;
    rb[7][8][7] = 10000000;
    ra[7][9][1] = 1000000;
    rb[7][9][1] = 100000001;
    ra[7][9][2] = 1000000;
    rb[7][9][2] = 100000010;
    ra[7][9][3] = 1000000;
    rb[7][9][3] = 100000100;
    ra[7][9][4] = 1000000;
    rb[7][9][4] = 100001000;
    ra[7][9][5] = 1000000;
    rb[7][9][5] = 100010000;
    ra[7][9][6] = 1000000;
    rb[7][9][6] = 100100000;
    ra[7][9][7] = 1000000;
    rb[7][9][7] = 100000000;
    ra[8][8][1] = 10000000;
    rb[8][8][1] = 10000001;
    ra[8][8][2] = 10000000;
    rb[8][8][2] = 10000010;
    ra[8][8][3] = 10000000;
    rb[8][8][3] = 10000100;
    ra[8][8][4] = 10000000;
    rb[8][8][4] = 10001000;
    ra[8][8][5] = 10000000;
    rb[8][8][5] = 10010000;
    ra[8][8][6] = 10000000;
    rb[8][8][6] = 10100000;
    ra[8][8][7] = 10000000;
    rb[8][8][7] = 11000000;
    ra[8][8][8] = 10000000;
    rb[8][8][8] = 10000000;
    ra[8][9][1] = 10000000;
    rb[8][9][1] = 100000001;
    ra[8][9][2] = 10000000;
    rb[8][9][2] = 100000010;
    ra[8][9][3] = 10000000;
    rb[8][9][3] = 100000100;
    ra[8][9][4] = 10000000;
    rb[8][9][4] = 100001000;
    ra[8][9][5] = 10000000;
    rb[8][9][5] = 100010000;
    ra[8][9][6] = 10000000;
    rb[8][9][6] = 100100000;
    ra[8][9][7] = 10000000;
    rb[8][9][7] = 101000000;
    ra[8][9][8] = 10000000;
    rb[8][9][8] = 100000000;
    ra[9][9][1] = 100000000;
    rb[9][9][1] = 100000001;
    ra[9][9][2] = 100000000;
    rb[9][9][2] = 100000010;
    ra[9][9][3] = 100000000;
    rb[9][9][3] = 100000100;
    ra[9][9][4] = 100000000;
    rb[9][9][4] = 100001000;
    ra[9][9][5] = 100000000;
    rb[9][9][5] = 100010000;
    ra[9][9][6] = 100000000;
    rb[9][9][6] = 100100000;
    ra[9][9][7] = 100000000;
    rb[9][9][7] = 101000000;
    ra[9][9][8] = 100000000;
    rb[9][9][8] = 110000000;
    ra[9][9][9] = 100000000;
    rb[9][9][9] = 100000000;
    printd("--------------------------");
    printd("TEST START!!!");
    printd("--------------------------");
    int tc;
    scanf("%d", &tc);
    for (int TC = 0; TC < tc; TC++) {
        int a, b, c;
        scanf("%d %d %d", &a, &b, &c);
        printd("Input: %d, %d, %d", a, b, c);
        if (b < a) {
            swap(a, b);
            printd("Getting %d, %d, %d... => %d, %d", b, a, c, rb[a][b][c], ra[a][b][c]);
            printf("%d %d\n", rb[a][b][c], ra[a][b][c]);
        } else {
            printd("Getting %d, %d, %d... => %d, %d", a, b, c, ra[a][b][c], rb[a][b][c]);
            printf("%d %d\n", ra[a][b][c], rb[a][b][c]);
        }
    }
MAIN_END
